name: Update Databricks Notebooks

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'notebooks/**'
      - '.github/workflows/notebooks.yaml'

jobs:
  update-databricks-notebooks:
    runs-on: ubuntu-latest
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      DATABRICKS_WORKSPACE_PATH: '/Users/labuser10394792_1748213278@vocareum.com'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Databricks CLI
        run: |
          pip install databricks-cli

      - name: Deploy Databricks Notebooks
        run: |
          find notebooks -type f \( -name "*.py" -o -name "*.scala" -o -name "*.sql" -o -name "*.r" \) -print0 | while IFS= read -r -d $'\0' notebook_file; do
            echo "Processing notebook: $notebook_file"

            RELATIVE_PATH="${notebook_file#notebooks/}"
            TARGET_WORKSPACE_PATH="${DATABRICKS_WORKSPACE_PATH}/${RELATIVE_PATH}"
            TARGET_WORKSPACE_PATH=$(echo "${TARGET_WORKSPACE_PATH}" | sed 's#//#/#g')

            TARGET_DIR=$(dirname "${TARGET_WORKSPACE_PATH}")
            echo "Ensuring directory ${TARGET_DIR} exists in Databricks workspace..."
            databricks workspace mkdirs "${TARGET_DIR}" || echo "Target directory might already exist."

            EXTENSION_LOWER=$(echo "${notebook_file##*.}")
            LANGUAGE=""
            case "$EXTENSION_LOWER" in
              py)
                LANGUAGE="PYTHON"
                ;;
              scala)
                LANGUAGE="SCALA"
                ;;
              sql)
                LANGUAGE="SQL"
                ;;
              r)
                LANGUAGE="R"
                ;;
              *)
                echo "Unsupported file extension: .$EXTENSION_LOWER for file $notebook_file. Skipping."
                continue # Pula para o próximo arquivo no loop
                ;;
            esac

            echo "Importing ${notebook_file} to ${TARGET_WORKSPACE_PATH} with language ${LANGUAGE} ..."
            databricks workspace import --language "${LANGUAGE}" --format SOURCE --overwrite "${notebook_file}" "${TARGET_WORKSPACE_PATH}"

            if [ $? -eq 0 ]; then
              echo "Successfully imported/updated ${TARGET_WORKSPACE_PATH}"
            else
              echo "Failed to import/update ${TARGET_WORKSPACE_PATH}"
              # Você pode querer falhar o workflow aqui, dependendo da sua necessidade
              # exit 1 
            fi
          echo "---"
          done
          echo "Notebook deployment process finished"
